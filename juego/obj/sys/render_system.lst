ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 1.
Hexadecimal [16-Bits]



                              1 ;;
                              2 ;;RENDER SYSTEM
                              3 ;;
                              4 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 2.
Hexadecimal [16-Bits]



                              5 .include "cpct_functions.h.s"
                              1 ;;
                              2 ;;CPCTELERA FUNCTION
                              3 ;;
                              4 
                              5 
                              6 .globl cpct_getScreenPtr_asm
                              7 .globl cpct_drawSolidBox_asm
                              8 .globl cpct_setDrawCharM0_asm 
                              9 .globl cpct_drawStringM0_asm
                             10 .globl cpct_disableFirmware_asm
                             11 .globl cpct_scanKeyboard_asm
                             12 .globl cpct_isKeyPressed_asm
                             13 .globl cpct_setVideoMode_asm
                             14 .globl cpct_drawSprite_asm
                             15 .globl cpct_setPalette_asm
                             16 .globl cpct_setVideoMemoryPage_asm
                             17 .globl cpct_waitVSYNC_asm
                             18 .globl cpct_zx7b_decrunch_s_asm
                             19 .globl cpct_etm_setDrawTilemap4x8_ag_asm
                             20 .globl cpct_etm_drawTilemap4x8_ag_asm	
                             21 .globl cpct_waitHalts_asm
                             22 
                             23 .globl cpct_akp_musicPlay_asm
                             24 .globl cpct_akp_musicInit_asm
                             25 .globl cpct_setInterruptHandler_asm
                             26 .globl cpct_getRandom_mxor_u8_asm
                             27 
                             28 
                             29 
                             30 
                             31 
                             32 
                             33 
                             34 .globl cpct_akp_SFXPlay_asm
                             35 .globl cpct_akp_SFXInit_asm
                             36 .globl cpct_akp_SFXStopAll_asm
                             37 .globl cpct_akp_stop_asm
                             38 
                             39 
                             40 
                             41 
                             42 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 3.
Hexadecimal [16-Bits]



                              6 .include "man/entity_manager.h.s"
                              1 ;;
                              2 ;;entity Manager
                              3 ;;
                              4 
                              5 
                              6 
                              7 .globl create_entities
                              8 .globl entityman_getEntityVector_IX
                              9 .globl entityman_num_entities
                             10 .globl _num_entities
                             11 .globl init_entities
                             12 
                             13 
                             14 ;; Entity definition macro
                             15 
                             16 
                             17 .macro Entity _name,_x,_y,_xl,_yl,_xll,_yll,_vx,_vy,_sh,_iast,_dir,_dead,_ancho,_alto
                             18 _name::
                             19 .db _x      ;;posicion x del tanque
                             20 .db _y	;;posicion y del tanque
                             21 .db _xl	;;posicion de la x anterior
                             22 .db _yl	;;posicion de la y anterior
                             23 .db _xll	;;posicion de la x 2 veces anterior
                             24 .db _yll	;;posicion de la x 2 veces anterior
                             25 .db _vx	;;velocidad en x
                             26 .db _vy	;;velocidad en y
                             27 .db _sh	;;shot 0 no 1 si
                             28 .db _iast;;type 0 jugador por teclas ,1 enemigo ia
                             29 .db _dir    ;;movimiento  
                             30 .db _sh     ;; si no dispara es 0 si dispara es 1
                             31 .db _dead;;canon 0 vivo 1 muere
                             32 .db 0x00, 0x00    ;;iax ia y
                             33 .db _iast  ;;Estado anterior de la ia 
                             34 .dw 0x0000	;; puntero de la patrulla que voy a realizar
                             35 .dw 0x0000 ;;puntero al estado que tengo que saltar
                             36 .db _ancho
                             37 .db _alto
                             38 .db 25  ;; contador cambio direcion del sprite
                             39 
                             40 
                             41 
                             42 
                             43 
                             44 
                             45 .endm 
                             46 
                             47 
                             48 .macro NextEntity
                             49 ld de, #siceof_e
                             50 	add ix, de
                             51 .endm
                             52 	
                             53 
                     0000    54 e_x  	= 0
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 4.
Hexadecimal [16-Bits]



                     0001    55 e_y  	= 1
                     0002    56 e_xl  = 2
                     0003    57 e_yl  = 3
                     0004    58 e_xll = 4
                     0005    59 e_yll = 5
                     0006    60 e_vx	= 6
                     0007    61 e_vy	= 7
                     0008    62 e_sh 	= 8
                     0009    63 e_ia_st = 9
                     000A    64 e_dir = 10
                     000B    65 e_sh = 11
                     000C    66 e_dead=12
                     000D    67 e_ia_x= 13
                     000E    68 e_ia_y= 14
                     000F    69 e_ia_st_prev=15
                     0010    70 e_ia_puntero_patrol_h=16
                     0011    71 e_ia_puntero_patrol_l=17
                     0012    72 e_ia_puntero_st_h=18
                     0013    73 e_ia_puntero_st_l=19
                     0014    74 e_ancho 	= 20
                     0015    75 e_alto	= 21
                     0016    76 e_clock     = 22
                     0017    77 siceof_e 	= 23
                             78 
                             79 ;; Movimiento de la entidad
                     0003    80 e_dir_right = 3
                     0002    81 e_dir_top   = 2
                     0001    82 e_dir_left  = 1
                     0004    83 e_dir_bott  = 4
                             84 
                             85 ;; Dibujo que representa el movimiento de la entidad
                             86 
                             87  ;;      2
                             88  ;;     1e3
                             89  ;;      4
                             90 
                             91 
                             92 ;;Estados ia
                     0000    93 e_ia_st_noIA 	= 0
                     0001    94 e_ia_st_stand_by	= 1
                     0002    95 e_ia_st_move_to   = 2
                     0003    96 e_ia_st_patron	= 3
                             97 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 5.
Hexadecimal [16-Bits]



                              7 .include "man/shot_manager.h.s"
                              1 ;;
                              2 ;;shot manager h
                              3 ;;
                              4 
                              5 ;; MACROS
                              6 
                              7 .macro DefineBalesArray _nameb,_N
                              8 _nameb::
                              9 	.rept _N
                             10 DefineBalesAnnonimous -1,00,00,00,00,00,00,00,00,00,00,0x00
                             11 	.endm 
                             12 .endm
                             13 
                             14 .macro DefineBalesAnnonimous _bx,_by,_bxl,_byl,_bxll,_byll,_bvx,_bvy,_bsta,_bwidth,_bheight,_bcolor
                             15 .db _bx           ;; posicion de la bala x          
                             16 .db _by		;; posicion de la bala y
                             17 .db _bxl		;; posicion anterior x
                             18 .db _byl		;; posicion anterior y
                             19 .db _bxll		;; posicion 2 veces anterior x
                             20 .db _byll		;; posicion 2 veces anterior y
                             21 .db _bvx 		;; velocidad bala en x
                             22 .db _bvy		;; belocidad bala en y
                             23 .db _bsta		;; estado de la bala   ¡¡¡¡¡YA NO SIRVEE¡¡¡¡¡¡
                             24 .db _bwidth       ;; anchura de la bala
                             25 .db _bheight      ;; altura de la bala
                             26 .db _bcolor       ;; color de la bala
                             27 .db 0x00 ,0x00    ;; posicion de memoria del canon
                             28  
                             29 .endm
                             30 
                             31 ;; CONSTANTES QUE REFERENCIAN LOS ATRIBUTOS DE LAS BALAS (USADOS POR LOS REGISTROS IX E IY, RESPECTIVAMENTE)
                             32 
                     0000    33 b_x       = 0
                     0001    34 b_y       = 1
                     0002    35 b_xl      = 2
                     0003    36 b_yl      = 3
                     0004    37 b_xll     = 4
                     0005    38 b_yll     = 5
                     0006    39 b_vx      = 6      ;; velocidad bala eje x
                     0007    40 b_vy      = 7      ;; velocidad bala eje y
                     0008    41 b_sta     = 8      ;; estado de la bala
                     0009    42 b_h       = 9      ;; altura de la bala
                     000A    43 b_w       = 10     ;; anchura de la bala
                     000B    44 b_color   = 11     ;; color de la bala (sustituible por puntero a sprite)
                     000C    45 b_canon_l = 12     ;; posicion de memoria del canon en l
                     000D    46 b_canon_h = 13	 ;; posicion de memoria del canon en h
                     000E    47 siceof_b  = 14
                             48 
                             49 
                             50 ;; GLOBAL FUNCTIONS
                             51 
                             52 
                             53 .globl entityman_getArray_Bales
                             54 .globl entityman_num_Bales
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 6.
Hexadecimal [16-Bits]



                             55 
                             56 
                             57 ;; CONSTANTES:
                             58 
                             59 ;; Numero maximo de balas
                             60 
                     0005    61 max_bales == 5
                             62 
                             63 ;; Posicionar centralmente la bala con respecto al sprite
                             64 
                     0002    65 b_inc_pos_x = 2
                     0006    66 b_inc_pos_y = 6
                             67 
                             68 ;; DIMENSIONES POSIBLES DE LA BALA
                             69 
                             70 ;; Cuando va en horizontal
                             71 
                     0002    72 b_width      = 2   ;; anchura de la bala
                     0008    73 b_height     = 8   ;; altura de la bala
                             74 
                             75 ;; Cuando va en vertical
                             76 
                             77 
                             78 
                             79 
                             80 
                             81 ;; Color por defecto de la bala
                             82 
                     00C0    83 reset_bullet_color = 0xC0   ;; Color negro
                             84 
                             85 ;; Velocidades posibles de la bala
                             86 
                     0001    87 pos_vel_h = 1
                     FFFFFFFF    88 neg_vel_h = -1
                     0004    89 pos_vel_v = 4
                     FFFFFFFC    90 neg_vel_v = -4
                     0000    91 sin_vel = 0
                             92 
                             93 ;; Estados de la bala
                             94 
                     0000    95 b_no_shoot  = 0    ;; bala no disparada (estado por defecto)
                     0001    96 b_shoot     = 1    ;; bala disparada
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 7.
Hexadecimal [16-Bits]



                              8 .include "man/manager_buffer.h.s"
                              1 ;;
                              2 ;;Manager_buffer h
                              3 ;;
                              4 
                              5 .globl map_switchBuffers
                              6 .globl map_getVideoPrt
                              7 .globl map_firstBuffer
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 8.
Hexadecimal [16-Bits]



                              9 .include "sys/render_system.h.s"
                              1 ;;
                              2 ;;RENDER SYSTEM
                              3 ;;
                              4 
                              5 .globl render_entities
                              6 .globl rendersys_update
                              7 .globl rendersys_init
                              8 .globl pintar_hud
                              9 .globl jugador_muerto
                             10 .globl pintar_letras
                     0019    11 _contador_ciclos = 25
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 9.
Hexadecimal [16-Bits]



                             10 .include "sys/plant_render.h.s"
                              1 ;;
                              2 ;;RENDER SYSTEM
                              3 ;;
                              4 
                              5 
                              6 .globl plant_render
                              7 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 10.
Hexadecimal [16-Bits]



                             11 .include "assets.h.s"
                              1 ;;
                              2 ;;Assets globals
                              3 ;;
                              4 
                              5 .globl _cannons_sp_00
                              6 .globl _cannons_sp_01
                              7 .globl _cannons_sp_02
                              8 .globl _cannons_sp_03
                              9 .globl _cannons_sp_04
                             10 .globl _cannons_sp_05
                             11 .globl _cannons_sp_06
                             12 .globl _cannons_sp_07
                             13 .globl _cannons_sp_08
                             14 .globl _cannons_sp_09
                             15 .globl _cannons_sp_10
                             16 .globl _cannons_sp_11
                             17 .globl _cannons_sp_12
                             18 .globl _cannons_sp_13
                             19 .globl _cannons_sp_14
                             20 .globl _cannons_sp_15
                             21 .globl _cannons_sp_16
                             22 .globl _cannons_sp_17
                             23 .globl _cannons_sp_18
                             24 .globl _cannons_sp_19
                             25 .globl _player_sp
                             26 .globl _spr2
                             27 .globl _spr3
                             28 .globl _spr4
                             29 .globl _mapa1
                             30 .globl _mapa2
                             31 .globl _mapa3
                             32 .globl _mapa4
                             33 .globl _mapa5
                             34 .globl _mapa6
                             35 .globl _single_mapa1
                             36 .globl _single_mapa2
                             37 .globl _single_mapa3
                             38 .globl _single_mapa4
                             39 .globl _single_mapa5
                             40 .globl _single_mapa6
                             41 .globl _plant_sp
                             42 
                             43 .globl _tileset_00
                             44 .globl _bala_sp
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 11.
Hexadecimal [16-Bits]



                             12 
                             13 
   0000 19                   14 _contador:: .db #_contador_ciclos
   0001 04                   15 _tipsprite:: .db #04
                             16 
                             17 
                     000F    18 _P1_hudx = 15
                     0023    19 _P2_hudx = 35
                     0037    20 _P3_hudx = 55
                     004B    21 _P4_hudx = 75
                             22 
   0002                      23 rendersys_init::  
                             24 
                             25 
                             26 
   0002 CD 00 00      [17]   27  call entityman_getEntityVector_IX
   0005 CD 00 00      [17]   28  call entityman_num_entities  
   0008 32 28 00      [13]   29 ld (_contador_entidades),a
   000B DD 22 2B 00   [20]   30 ld (_puntero_entidades), ix
                             31 
                             32 
   000F CD 00 00      [17]   33  call entityman_getArray_Bales  ;; cogemos en ix el puntero a las balas
   0012 CD 00 00      [17]   34  call entityman_num_Bales
   0015 22 E6 00      [16]   35  ld (_contador_balas), hl
   0018 DD 22 EF 00   [20]   36  ld (_puntero_balas), ix
   001C C9            [10]   37 ret
                             38 
                             39 
                             40 
                             41 
   001D                      42 rendersys_update::
                             43 
   001D CD 27 00      [17]   44  call render_entities  	;;render para los tanques
   0020 CD 00 00      [17]   45  call plant_render
   0023 CD E5 00      [17]   46  call render_bales   ;;render para las balas
                             47  
   0026 C9            [10]   48  ret
                             49 
                             50 
   0027                      51 render_entities:
                     0028    52  _contador_entidades=.+1
   0027 3E 00         [ 7]   53  ld a, #00
                     002B    54  _puntero_entidades=.+2
   0029 DD 21 00 00   [14]   55  ld ix, #0000
                             56 
   002D                      57 	_renloop:
   002D F5            [11]   58 push af
                             59 
   002E DD 46 0C      [19]   60   ld b ,e_dead(ix)
   0031 05            [ 4]   61   dec b
   0032 CA DA 00      [10]   62   jp z, _canon_muerto
                             63 
   0035 CD 00 00      [17]   64   call map_getVideoPrt  ;; esta funcion te da el puntero de el primer byte de la posicion de memoria del buffer que estamos en ese momento en hl
                             65 
                             66 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 12.
Hexadecimal [16-Bits]



   0038 F5            [11]   67 push af
   0039 EB            [ 4]   68   ex de, hl
                             69   ;;ld de, #0xC000
   003A DD 4E 00      [19]   70   ld   c, e_x(ix)  ;;x
   003D DD 46 01      [19]   71   ld   b, e_y(ix)  ;;y
   0040 CD 00 00      [17]   72   call cpct_getScreenPtr_asm    ;; Calculate video memory location and return it in HL
   0043 F1            [10]   73 pop af
                             74 
                             75 
                             76 
                             77 
                             78 
                             79 
   0044 EB            [ 4]   80  ex  de,hl
                             81 
                             82  
   0045 DD 46 0A      [19]   83  ld b ,e_dir(ix)
                             84 
                             85 
                             86 
                             87 
   0048 3D            [ 4]   88   dec a
   0049 28 68         [12]   89   jr z, _pintar_cannon4
   004B 3D            [ 4]   90   dec a
   004C 28 45         [12]   91   jr z, _pintar_cannon3
   004E 3D            [ 4]   92   dec a
   004F 28 22         [12]   93   jr z, _pintar_cannon2
   0051 18 00         [12]   94   jr _pintar_cannon1
                             95 
                             96 ;;;;;;;;;;;;;;;;;;
                             97 ;;PINTAR CANON 1;;
                             98 ;;;;;;;;;;;;;;;;;;
                             99 
   0053                     100 _pintar_cannon1:
   0053 05            [ 4]  101  dec b
   0054 28 09         [12]  102  jr z, _pintarc1_1
   0056 05            [ 4]  103  dec b
   0057 28 0B         [12]  104  jr z, _pintarc1_2
   0059 05            [ 4]  105  dec b
   005A 28 0D         [12]  106  jr z, _pintarc1_3
   005C 05            [ 4]  107  dec b
   005D 28 0F         [12]  108  jr z, _pintarc1_4
                            109 
                            110 
   005F                     111  _pintarc1_1:
   005F 21 00 00      [10]  112  ld hl,#_cannons_sp_00
   0062 18 6F         [12]  113  jr _saltar
                            114 
   0064                     115  _pintarc1_2:
   0064 21 00 00      [10]  116  ld hl,#_cannons_sp_01
   0067 18 6A         [12]  117  jr _saltar
                            118 
   0069                     119  _pintarc1_3:
   0069 21 00 00      [10]  120  ld hl,#_cannons_sp_02
   006C 18 65         [12]  121  jr _saltar
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 13.
Hexadecimal [16-Bits]



                            122 
   006E                     123  _pintarc1_4:
   006E 21 00 00      [10]  124  ld hl,#_cannons_sp_03
   0071 18 60         [12]  125  jr _saltar
                            126 
                            127 
                            128 
                            129 ;;;;;;;;;;;;;;;;;;
                            130 ;;PINTAR CANON 2;;
                            131 ;;;;;;;;;;;;;;;;;;
                            132 
   0073                     133 _pintar_cannon2:
   0073 05            [ 4]  134  dec b
   0074 28 09         [12]  135  jr z, _pintarc2_1
   0076 05            [ 4]  136  dec b
   0077 28 0B         [12]  137  jr z, _pintarc2_2
   0079 05            [ 4]  138  dec b
   007A 28 0D         [12]  139  jr z, _pintarc2_3
   007C 05            [ 4]  140  dec b
   007D 28 0F         [12]  141  jr z, _pintarc2_4
                            142 
                            143 
   007F                     144  _pintarc2_1:
   007F 21 00 00      [10]  145  ld hl,#_cannons_sp_05
   0082 18 4F         [12]  146  jr _saltar
                            147 
   0084                     148  _pintarc2_2:
   0084 21 00 00      [10]  149  ld hl,#_cannons_sp_06
   0087 18 4A         [12]  150  jr _saltar
                            151 
   0089                     152  _pintarc2_3:
   0089 21 00 00      [10]  153  ld hl,#_cannons_sp_07
   008C 18 45         [12]  154  jr _saltar
                            155 
   008E                     156  _pintarc2_4:
   008E 21 00 00      [10]  157  ld hl,#_cannons_sp_08
   0091 18 40         [12]  158  jr _saltar
                            159 
                            160 
                            161 ;;;;;;;;;;;;;;;;;;
                            162 ;;PINTAR CANON 3;;
                            163 ;;;;;;;;;;;;;;;;;;
                            164 
   0093                     165 _pintar_cannon3:
   0093 05            [ 4]  166  dec b
   0094 28 09         [12]  167  jr z, _pintarc3_1
   0096 05            [ 4]  168  dec b
   0097 28 0B         [12]  169  jr z, _pintarc3_2
   0099 05            [ 4]  170  dec b
   009A 28 0D         [12]  171  jr z, _pintarc3_3
   009C 05            [ 4]  172  dec b
   009D 28 0F         [12]  173  jr z, _pintarc3_4
                            174 
                            175 
   009F                     176  _pintarc3_1:
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 14.
Hexadecimal [16-Bits]



   009F 21 00 00      [10]  177  ld hl,#_cannons_sp_10
   00A2 18 2F         [12]  178  jr _saltar
                            179 
   00A4                     180  _pintarc3_2:
   00A4 21 00 00      [10]  181  ld hl,#_cannons_sp_11
   00A7 18 2A         [12]  182  jr _saltar
                            183 
   00A9                     184  _pintarc3_3:
   00A9 21 00 00      [10]  185  ld hl,#_cannons_sp_12
   00AC 18 25         [12]  186  jr _saltar
                            187 
   00AE                     188  _pintarc3_4:
   00AE 21 00 00      [10]  189  ld hl,#_cannons_sp_13
   00B1 18 20         [12]  190  jr _saltar
                            191 
                            192 
                            193 ;;;;;;;;;;;;;;;;;;
                            194 ;;PINTAR CANON 4;;
                            195 ;;;;;;;;;;;;;;;;;;
                            196 
   00B3                     197 _pintar_cannon4:
   00B3 05            [ 4]  198  dec b
   00B4 28 09         [12]  199  jr z, _pintarc4_1
   00B6 05            [ 4]  200  dec b
   00B7 28 0B         [12]  201  jr z, _pintarc4_2
   00B9 05            [ 4]  202  dec b
   00BA 28 0D         [12]  203  jr z, _pintarc4_3
   00BC 05            [ 4]  204  dec b
   00BD 28 0F         [12]  205  jr z, _pintarc4_4
                            206 
                            207 
   00BF                     208  _pintarc4_1:
   00BF 21 00 00      [10]  209  ld hl,#_cannons_sp_15
   00C2 18 0F         [12]  210  jr _saltar
                            211 
   00C4                     212  _pintarc4_2:
   00C4 21 00 00      [10]  213  ld hl,#_cannons_sp_16
   00C7 18 0A         [12]  214  jr _saltar
                            215 
   00C9                     216  _pintarc4_3:
   00C9 21 00 00      [10]  217  ld hl,#_cannons_sp_17
   00CC 18 05         [12]  218  jr _saltar
                            219 
   00CE                     220  _pintarc4_4:
   00CE 21 00 00      [10]  221  ld hl,#_cannons_sp_18
   00D1 18 00         [12]  222  jr _saltar
                            223 
                            224 
                            225 
                            226 
                            227 
                            228 
                            229 
   00D3                     230  _saltar:
                            231 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 15.
Hexadecimal [16-Bits]



                            232 
   00D3 0E 04         [ 7]  233  ld c, #04  ;;ancho
   00D5 06 10         [ 7]  234  ld b, #16  ;;alto
                            235  
   00D7 CD 00 00      [17]  236  call cpct_drawSprite_asm
                            237 
                            238 
   00DA                     239 _canon_muerto:
   00DA F1            [10]  240 pop af 
                            241 
   00DB 3D            [ 4]  242 dec a
   00DC C8            [11]  243 ret z
                            244 
   00DD 01 17 00      [10]  245 ld bc, #siceof_e    ;;NUMERO DE BYTES QUE TIENE CADA ENTIDAD
   00E0 DD 09         [15]  246 add ix, bc
   00E2 C3 2D 00      [10]  247 jp  _renloop
                            248 
                            249 
                            250 
   00E5                     251 render_bales:
                            252 
                            253  
                     00E6   254   _contador_balas=.+1
   00E5 21 00 00      [10]  255   ld hl, #0000
                            256 
   00E8 7E            [ 7]  257  ld   a, (hl) 
   00E9 B7            [ 4]  258 	or a
   00EA 20 01         [12]  259  jr nz, _hay_balas
   00EC C9            [10]  260  ret
                            261 
   00ED                     262 _hay_balas:
                            263 
                            264 
                            265 
                     00EF   266  _puntero_balas=.+2
   00ED DD 21 00 00   [14]  267   ld ix, #0000
                            268   
                            269  
   00F1                     270  _renloop_b:
                            271 
                            272 
   00F1 F5            [11]  273 push af
                            274 
   00F2 CD 00 00      [17]  275 call map_getVideoPrt  ;; esta funcion te da el puntero de el primer byte de la posicion de memoria del buffer que estamos en ese momento en hl
   00F5 EB            [ 4]  276   ex de, hl
   00F6 DD 4E 00      [19]  277   ld   c, b_x(ix)  
   00F9 DD 46 01      [19]  278   ld   b, b_y(ix)  
   00FC CD 00 00      [17]  279   call cpct_getScreenPtr_asm    ;; Calculate video memory location and return it in HL
                            280 
                            281 
                            282 
                            283 
   00FF EB            [ 4]  284  ex de, hl
   0100 0E 02         [ 7]  285  ld c, #02  ;;ancho
   0102 06 08         [ 7]  286  ld b, #08  ;;alto
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 16.
Hexadecimal [16-Bits]



   0104 21 00 00      [10]  287  ld hl,#_bala_sp
   0107 CD 00 00      [17]  288  call cpct_drawSprite_asm
                            289 
                            290 
   010A F1            [10]  291 pop af 
                            292 
   010B 3D            [ 4]  293 dec a
   010C C8            [11]  294 ret z
                            295 
   010D 01 0E 00      [10]  296 ld bc, #siceof_b    ;;NUMERO DE BYTES QUE TIENE CADA BALA
   0110 DD 09         [15]  297 add ix, bc
   0112 20 DD         [12]  298 jr nz, _renloop_b
                            299 
                            300 
                            301 
   0114 C9            [10]  302 ret
                            303 	
                            304 
                            305 
   0115                     306 jugador_muerto::
                            307 
   0115 DD 2A 2B 00   [20]  308 ld ix, (_puntero_entidades)
                            309 
                            310 
                            311   ;;Comprobar si el muerto es la primera entidad
   0119 DD 7E 0C      [19]  312       ld a, e_dead(ix)
   011C 3D            [ 4]  313       dec a
   011D CC FE 01      [17]  314       call z, dibujarplayer1_M
                            315   
   0120 01 17 00      [10]  316     ld bc, #siceof_e   
   0123 DD 09         [15]  317     add ix, bc 
                            318   ;;Comprobar si el muerto es la segunda entidad
   0125 DD 7E 0C      [19]  319       ld a, e_dead(ix)
   0128 3D            [ 4]  320       dec a
   0129 CC 29 02      [17]  321       call z, dibujarplayer2_M
                            322   
   012C 01 17 00      [10]  323     ld bc, #siceof_e    
   012F DD 09         [15]  324     add ix, bc
                            325    ;;Comprobar si el muerto es la tercera entidad
   0131 DD 7E 0C      [19]  326       ld a, e_dead(ix)
   0134 3D            [ 4]  327       dec a
   0135 CC 54 02      [17]  328       call z, dibujarplayer3_M
                            329 
   0138 01 17 00      [10]  330     ld bc, #siceof_e    
   013B DD 09         [15]  331     add ix, bc
                            332     ;;Comprobar si el muerto es la cuearta entidad
   013D DD 7E 0C      [19]  333       ld a, e_dead(ix)
   0140 3D            [ 4]  334       dec a
   0141 CC 7F 02      [17]  335       call z, dibujarplayer4_M
                            336 
   0144 C9            [10]  337 ret
                            338 
   0145                     339 pintar_hud::
                            340 
   0145 CD 52 01      [17]  341   call dibujarplayer1
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 17.
Hexadecimal [16-Bits]



   0148 CD 7D 01      [17]  342   call dibujarplayer2
   014B CD A8 01      [17]  343   call dibujarplayer3
   014E CD D3 01      [17]  344   call dibujarplayer4
                            345 
   0151 C9            [10]  346 ret
                            347 
                            348 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            349 ;;Dibujar el jugador en el hud;;
                            350 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            351 
                            352 
   0152                     353 dibujarplayer1:
                            354  
   0152 11 00 C0      [10]  355  ld  de, #0xC000
   0155 0E 0F         [ 7]  356  ld   c, #_P1_hudx    ;;x
   0157 06 B4         [ 7]  357  ld   b, #180  ;;y
   0159 CD 00 00      [17]  358  call cpct_getScreenPtr_asm
                            359  
   015C EB            [ 4]  360  ex de, hl
   015D 0E 04         [ 7]  361  ld c, #04  ;;ancho
   015F 06 10         [ 7]  362  ld b, #16  ;;alto
   0161 21 00 00      [10]  363  ld hl,#_cannons_sp_02
   0164 CD 00 00      [17]  364  call cpct_drawSprite_asm
                            365 
   0167 11 00 80      [10]  366  ld  de, #0x8000
   016A 0E 0F         [ 7]  367  ld   c, #_P1_hudx    ;;x
   016C 06 B4         [ 7]  368  ld   b, #180  ;;y
   016E CD 00 00      [17]  369  call cpct_getScreenPtr_asm
                            370  
   0171 EB            [ 4]  371  ex de, hl
   0172 0E 04         [ 7]  372  ld c, #04  ;;ancho
   0174 06 10         [ 7]  373  ld b, #16  ;;alto
   0176 21 00 00      [10]  374  ld hl,#_cannons_sp_02
   0179 CD 00 00      [17]  375  call cpct_drawSprite_asm
                            376 
   017C C9            [10]  377 ret
                            378 
   017D                     379 dibujarplayer2:
   017D 11 00 C0      [10]  380  ld  de, #0xC000
   0180 0E 23         [ 7]  381  ld   c, #_P2_hudx  ;;x
   0182 06 B4         [ 7]  382  ld   b, #180   ;;y
   0184 CD 00 00      [17]  383  call cpct_getScreenPtr_asm
                            384 
   0187 EB            [ 4]  385  ex de, hl
   0188 0E 04         [ 7]  386  ld c, #04  ;;ancho
   018A 06 10         [ 7]  387  ld b, #16  ;;alto
   018C 21 00 00      [10]  388  ld hl,#_cannons_sp_07
   018F CD 00 00      [17]  389  call cpct_drawSprite_asm
                            390 
   0192 11 00 80      [10]  391   ld  de, #0x8000
   0195 0E 23         [ 7]  392  ld   c, #_P2_hudx  ;;x
   0197 06 B4         [ 7]  393  ld   b, #180   ;;y
   0199 CD 00 00      [17]  394  call cpct_getScreenPtr_asm
                            395 
   019C EB            [ 4]  396  ex de, hl
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 18.
Hexadecimal [16-Bits]



   019D 0E 04         [ 7]  397  ld c, #04  ;;ancho
   019F 06 10         [ 7]  398  ld b, #16  ;;alto
   01A1 21 00 00      [10]  399  ld hl,#_cannons_sp_07
   01A4 CD 00 00      [17]  400  call cpct_drawSprite_asm
                            401 
   01A7 C9            [10]  402 ret
                            403 
   01A8                     404 dibujarplayer3:
   01A8 11 00 C0      [10]  405  ld  de, #0xC000
   01AB 0E 37         [ 7]  406  ld   c, #_P3_hudx  ;;x
   01AD 06 B4         [ 7]  407  ld   b, #180  ;;y
   01AF CD 00 00      [17]  408  call cpct_getScreenPtr_asm
                            409 
   01B2 EB            [ 4]  410  ex de, hl
   01B3 0E 04         [ 7]  411  ld c, #04  ;;ancho
   01B5 06 10         [ 7]  412  ld b, #16  ;;alto
   01B7 21 00 00      [10]  413  ld hl,#_cannons_sp_12
   01BA CD 00 00      [17]  414  call cpct_drawSprite_asm
                            415 
   01BD 11 00 80      [10]  416  ld  de, #0x8000
   01C0 0E 37         [ 7]  417  ld   c, #_P3_hudx  ;;x
   01C2 06 B4         [ 7]  418  ld   b, #180  ;;y
   01C4 CD 00 00      [17]  419  call cpct_getScreenPtr_asm
                            420 
   01C7 EB            [ 4]  421  ex de, hl
   01C8 0E 04         [ 7]  422  ld c, #04  ;;ancho
   01CA 06 10         [ 7]  423  ld b, #16  ;;alto
   01CC 21 00 00      [10]  424  ld hl,#_cannons_sp_12
   01CF CD 00 00      [17]  425  call cpct_drawSprite_asm
                            426 
   01D2 C9            [10]  427 ret
                            428 
   01D3                     429 dibujarplayer4:
   01D3 11 00 C0      [10]  430  ld  de, #0xC000
   01D6 0E 4B         [ 7]  431  ld   c, #_P4_hudx  ;;x
   01D8 06 B4         [ 7]  432  ld   b, #180  ;;y
   01DA CD 00 00      [17]  433  call cpct_getScreenPtr_asm
                            434 
   01DD EB            [ 4]  435  ex de, hl
   01DE 0E 04         [ 7]  436  ld c, #04  ;;ancho
   01E0 06 10         [ 7]  437  ld b, #16  ;;alto
   01E2 21 00 00      [10]  438  ld hl,#_cannons_sp_17
   01E5 CD 00 00      [17]  439  call cpct_drawSprite_asm
                            440 
   01E8 11 00 80      [10]  441  ld  de, #0x8000
   01EB 0E 4B         [ 7]  442  ld   c, #_P4_hudx  ;;x
   01ED 06 B4         [ 7]  443  ld   b, #180  ;;y
   01EF CD 00 00      [17]  444  call cpct_getScreenPtr_asm
                            445 
   01F2 EB            [ 4]  446  ex de, hl
   01F3 0E 04         [ 7]  447  ld c, #04  ;;ancho
   01F5 06 10         [ 7]  448  ld b, #16  ;;alto
   01F7 21 00 00      [10]  449  ld hl,#_cannons_sp_17
   01FA CD 00 00      [17]  450  call cpct_drawSprite_asm
                            451 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 19.
Hexadecimal [16-Bits]



   01FD C9            [10]  452 ret
                            453 
                            454 
                            455 
                            456 
                            457 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            458 ;;DIBUJAR EL HUB EL JUGADOR MUERTO;;
                            459 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   01FE                     460 dibujarplayer1_M:
                            461  
   01FE 11 00 C0      [10]  462  ld  de, #0xC000
   0201 0E 0F         [ 7]  463  ld   c, #_P1_hudx    ;;x
   0203 06 B4         [ 7]  464  ld   b, #180  ;;y
   0205 CD 00 00      [17]  465  call cpct_getScreenPtr_asm
                            466  
   0208 EB            [ 4]  467  ex de, hl
   0209 0E 04         [ 7]  468  ld c, #04  ;;ancho
   020B 06 10         [ 7]  469  ld b, #16  ;;alto
   020D 21 00 00      [10]  470  ld hl,#_cannons_sp_04
   0210 CD 00 00      [17]  471  call cpct_drawSprite_asm
                            472 
   0213 11 00 80      [10]  473  ld  de, #0x8000
   0216 0E 0F         [ 7]  474  ld   c, #_P1_hudx    ;;x
   0218 06 B4         [ 7]  475  ld   b, #180  ;;y
   021A CD 00 00      [17]  476  call cpct_getScreenPtr_asm
                            477  
   021D EB            [ 4]  478  ex de, hl
   021E 0E 04         [ 7]  479  ld c, #04  ;;ancho
   0220 06 10         [ 7]  480  ld b, #16  ;;alto
   0222 21 00 00      [10]  481  ld hl,#_cannons_sp_04
   0225 CD 00 00      [17]  482  call cpct_drawSprite_asm
                            483 
   0228 C9            [10]  484 ret
                            485 
   0229                     486 dibujarplayer2_M:
   0229 11 00 C0      [10]  487  ld  de, #0xC000
   022C 0E 23         [ 7]  488  ld   c, #_P2_hudx  ;;x
   022E 06 B4         [ 7]  489  ld   b, #180   ;;y
   0230 CD 00 00      [17]  490  call cpct_getScreenPtr_asm
                            491 
   0233 EB            [ 4]  492  ex de, hl
   0234 0E 04         [ 7]  493  ld c, #04  ;;ancho
   0236 06 10         [ 7]  494  ld b, #16  ;;alto
   0238 21 00 00      [10]  495  ld hl,#_cannons_sp_09
   023B CD 00 00      [17]  496  call cpct_drawSprite_asm
                            497 
   023E 11 00 80      [10]  498   ld  de, #0x8000
   0241 0E 23         [ 7]  499  ld   c, #_P2_hudx  ;;x
   0243 06 B4         [ 7]  500  ld   b, #180   ;;y
   0245 CD 00 00      [17]  501  call cpct_getScreenPtr_asm
                            502 
   0248 EB            [ 4]  503  ex de, hl
   0249 0E 04         [ 7]  504  ld c, #04  ;;ancho
   024B 06 10         [ 7]  505  ld b, #16  ;;alto
   024D 21 00 00      [10]  506  ld hl,#_cannons_sp_09
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 20.
Hexadecimal [16-Bits]



   0250 CD 00 00      [17]  507  call cpct_drawSprite_asm
                            508 
   0253 C9            [10]  509 ret
                            510 
   0254                     511 dibujarplayer3_M:
   0254 11 00 C0      [10]  512  ld  de, #0xC000
   0257 0E 37         [ 7]  513  ld   c, #_P3_hudx  ;;x
   0259 06 B4         [ 7]  514  ld   b, #180  ;;y
   025B CD 00 00      [17]  515  call cpct_getScreenPtr_asm
                            516 
   025E EB            [ 4]  517  ex de, hl
   025F 0E 04         [ 7]  518  ld c, #04  ;;ancho
   0261 06 10         [ 7]  519  ld b, #16  ;;alto
   0263 21 00 00      [10]  520  ld hl,#_cannons_sp_14
   0266 CD 00 00      [17]  521  call cpct_drawSprite_asm
                            522 
   0269 11 00 80      [10]  523  ld  de, #0x8000
   026C 0E 37         [ 7]  524  ld   c, #_P3_hudx  ;;x
   026E 06 B4         [ 7]  525  ld   b, #180  ;;y
   0270 CD 00 00      [17]  526  call cpct_getScreenPtr_asm
                            527 
   0273 EB            [ 4]  528  ex de, hl
   0274 0E 04         [ 7]  529  ld c, #04  ;;ancho
   0276 06 10         [ 7]  530  ld b, #16  ;;alto
   0278 21 00 00      [10]  531  ld hl,#_cannons_sp_14
   027B CD 00 00      [17]  532  call cpct_drawSprite_asm
                            533 
   027E C9            [10]  534 ret
                            535 
   027F                     536 dibujarplayer4_M:
   027F 11 00 C0      [10]  537  ld  de, #0xC000
   0282 0E 4B         [ 7]  538  ld   c, #_P4_hudx  ;;x
   0284 06 B4         [ 7]  539  ld   b, #180  ;;y
   0286 CD 00 00      [17]  540  call cpct_getScreenPtr_asm
                            541 
   0289 EB            [ 4]  542  ex de, hl
   028A 0E 04         [ 7]  543  ld c, #04  ;;ancho
   028C 06 10         [ 7]  544  ld b, #16  ;;alto
   028E 21 00 00      [10]  545  ld hl,#_cannons_sp_19
   0291 CD 00 00      [17]  546  call cpct_drawSprite_asm
                            547 
   0294 11 00 80      [10]  548  ld  de, #0x8000
   0297 0E 4B         [ 7]  549  ld   c, #_P4_hudx  ;;x
   0299 06 B4         [ 7]  550  ld   b, #180  ;;y
   029B CD 00 00      [17]  551  call cpct_getScreenPtr_asm
                            552 
   029E EB            [ 4]  553  ex de, hl
   029F 0E 04         [ 7]  554  ld c, #04  ;;ancho
   02A1 06 10         [ 7]  555  ld b, #16  ;;alto
   02A3 21 00 00      [10]  556  ld hl,#_cannons_sp_19
   02A6 CD 00 00      [17]  557  call cpct_drawSprite_asm
                            558 
   02A9 C9            [10]  559 ret
                            560 
                            561   
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 21.
Hexadecimal [16-Bits]



                            562 
   02AA                     563 pintar_letras::
                            564 
                            565 ;;Jugador;;
                            566 
   02AA 11 00 C0      [10]  567 ld  de, #0xC000
   02AD 0E 01         [ 7]  568  ld   c, #1    ;;x
   02AF 06 B4         [ 7]  569  ld   b, #180  ;;y
   02B1 CD 00 00      [17]  570  call cpct_getScreenPtr_asm
                            571  
   02B4 EB            [ 4]  572  ex de, hl
   02B5 0E 10         [ 7]  573  ld c, #16  ;;ancho
   02B7 06 10         [ 7]  574  ld b, #16  ;;alto
   02B9 21 00 00      [10]  575  ld hl,#_player_sp
   02BC CD 00 00      [17]  576  call cpct_drawSprite_asm
                            577 
   02BF 11 00 80      [10]  578  ld  de, #0x8000
   02C2 0E 01         [ 7]  579  ld   c, #1    ;;x
   02C4 06 B4         [ 7]  580  ld   b, #180  ;;y
   02C6 CD 00 00      [17]  581  call cpct_getScreenPtr_asm
                            582  
   02C9 EB            [ 4]  583  ex de, hl
   02CA 0E 10         [ 7]  584  ld c, #16 ;;ancho
   02CC 06 10         [ 7]  585  ld b, #16  ;;alto
   02CE 21 00 00      [10]  586  ld hl,#_player_sp
   02D1 CD 00 00      [17]  587  call cpct_drawSprite_asm
                            588 
                            589 
                            590 
                            591 ;;Jugador 2
                            592 
   02D4 11 00 C0      [10]  593 ld  de, #0xC000
   02D7 0E 14         [ 7]  594  ld   c, #20    ;;x
   02D9 06 B4         [ 7]  595  ld   b, #180  ;;y
   02DB CD 00 00      [17]  596  call cpct_getScreenPtr_asm
                            597  
   02DE EB            [ 4]  598  ex de, hl
   02DF 0E 10         [ 7]  599  ld c, #16  ;;ancho
   02E1 06 10         [ 7]  600  ld b, #16  ;;alto
   02E3 21 00 00      [10]  601  ld hl,#_player_sp
   02E6 CD 00 00      [17]  602  call cpct_drawSprite_asm
                            603 
   02E9 11 00 80      [10]  604  ld  de, #0x8000
   02EC 0E 14         [ 7]  605  ld   c, #20    ;;x
   02EE 06 B4         [ 7]  606  ld   b, #180  ;;y
   02F0 CD 00 00      [17]  607  call cpct_getScreenPtr_asm
                            608  
   02F3 EB            [ 4]  609  ex de, hl
   02F4 0E 10         [ 7]  610  ld c, #16 ;;ancho
   02F6 06 10         [ 7]  611  ld b, #16  ;;alto
   02F8 21 00 00      [10]  612  ld hl,#_player_sp
   02FB CD 00 00      [17]  613  call cpct_drawSprite_asm
                            614 
                            615 ;; Numero 2
                            616 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 22.
Hexadecimal [16-Bits]



   02FE 11 00 C0      [10]  617  ld  de, #0xC000
   0301 0E 1F         [ 7]  618  ld   c, #31    ;;x
   0303 06 B4         [ 7]  619  ld   b, #180  ;;y
   0305 CD 00 00      [17]  620  call cpct_getScreenPtr_asm
                            621  
   0308 EB            [ 4]  622  ex de, hl
   0309 0E 04         [ 7]  623  ld c, #4  ;;ancho
   030B 06 10         [ 7]  624  ld b, #16  ;;alto
   030D 21 00 00      [10]  625  ld hl,#_spr2
   0310 CD 00 00      [17]  626  call cpct_drawSprite_asm
                            627 
   0313 11 00 80      [10]  628  ld  de, #0x8000
   0316 0E 1F         [ 7]  629  ld   c, #31    ;;x
   0318 06 B4         [ 7]  630  ld   b, #180  ;;y
   031A CD 00 00      [17]  631  call cpct_getScreenPtr_asm
                            632  
   031D EB            [ 4]  633  ex de, hl
   031E 0E 04         [ 7]  634  ld c, #4 ;;ancho
   0320 06 10         [ 7]  635  ld b, #16  ;;alto
   0322 21 00 00      [10]  636  ld hl,#_spr2
   0325 CD 00 00      [17]  637  call cpct_drawSprite_asm
                            638 
                            639  
                            640 
                            641 
                            642 
                            643 ;;Jugador 3
                            644 
   0328 11 00 C0      [10]  645 ld  de, #0xC000
   032B 0E 28         [ 7]  646  ld   c, #40    ;;x
   032D 06 B4         [ 7]  647  ld   b, #180  ;;y
   032F CD 00 00      [17]  648  call cpct_getScreenPtr_asm
                            649  
   0332 EB            [ 4]  650  ex de, hl
   0333 0E 10         [ 7]  651  ld c, #16  ;;ancho
   0335 06 10         [ 7]  652  ld b, #16  ;;alto
   0337 21 00 00      [10]  653  ld hl,#_player_sp
   033A CD 00 00      [17]  654  call cpct_drawSprite_asm
                            655 
   033D 11 00 80      [10]  656  ld  de, #0x8000
   0340 0E 28         [ 7]  657  ld   c, #40    ;;x
   0342 06 B4         [ 7]  658  ld   b, #180  ;;y
   0344 CD 00 00      [17]  659  call cpct_getScreenPtr_asm
                            660  
   0347 EB            [ 4]  661  ex de, hl
   0348 0E 10         [ 7]  662  ld c, #16 ;;ancho
   034A 06 10         [ 7]  663  ld b, #16  ;;alto
   034C 21 00 00      [10]  664  ld hl,#_player_sp
   034F CD 00 00      [17]  665  call cpct_drawSprite_asm
                            666 
                            667 ;; Numero 3
                            668 
   0352 11 00 C0      [10]  669  ld  de, #0xC000
   0355 0E 33         [ 7]  670  ld   c, #51    ;;x
   0357 06 B4         [ 7]  671  ld   b, #180  ;;y
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 23.
Hexadecimal [16-Bits]



   0359 CD 00 00      [17]  672  call cpct_getScreenPtr_asm
                            673  
   035C EB            [ 4]  674  ex de, hl
   035D 0E 04         [ 7]  675  ld c, #4  ;;ancho
   035F 06 10         [ 7]  676  ld b, #16  ;;alto
   0361 21 00 00      [10]  677  ld hl,#_spr3
   0364 CD 00 00      [17]  678  call cpct_drawSprite_asm
                            679 
   0367 11 00 80      [10]  680  ld  de, #0x8000
   036A 0E 33         [ 7]  681  ld   c, #51    ;;x
   036C 06 B4         [ 7]  682  ld   b, #180  ;;y
   036E CD 00 00      [17]  683  call cpct_getScreenPtr_asm
                            684  
   0371 EB            [ 4]  685  ex de, hl
   0372 0E 04         [ 7]  686  ld c, #4 ;;ancho
   0374 06 10         [ 7]  687  ld b, #16  ;;alto
   0376 21 00 00      [10]  688  ld hl,#_spr3
   0379 CD 00 00      [17]  689  call cpct_drawSprite_asm
                            690 
                            691 
                            692 
                            693 ;;Jugador 4
                            694 
   037C 11 00 C0      [10]  695 ld  de, #0xC000
   037F 0E 3C         [ 7]  696  ld   c, #60    ;;x
   0381 06 B4         [ 7]  697  ld   b, #180  ;;y
   0383 CD 00 00      [17]  698  call cpct_getScreenPtr_asm
                            699  
   0386 EB            [ 4]  700  ex de, hl
   0387 0E 10         [ 7]  701  ld c, #16  ;;ancho
   0389 06 10         [ 7]  702  ld b, #16  ;;alto
   038B 21 00 00      [10]  703  ld hl,#_player_sp
   038E CD 00 00      [17]  704  call cpct_drawSprite_asm
                            705 
   0391 11 00 80      [10]  706  ld  de, #0x8000
   0394 0E 3C         [ 7]  707  ld   c, #60    ;;x
   0396 06 B4         [ 7]  708  ld   b, #180  ;;y
   0398 CD 00 00      [17]  709  call cpct_getScreenPtr_asm
                            710  
   039B EB            [ 4]  711  ex de, hl
   039C 0E 10         [ 7]  712  ld c, #16 ;;ancho
   039E 06 10         [ 7]  713  ld b, #16  ;;alto
   03A0 21 00 00      [10]  714  ld hl,#_player_sp
   03A3 CD 00 00      [17]  715  call cpct_drawSprite_asm
                            716 
                            717 ;numero 4
                            718 
   03A6 11 00 C0      [10]  719 ld  de, #0xC000
   03A9 0E 47         [ 7]  720  ld   c, #71    ;;x
   03AB 06 B4         [ 7]  721  ld   b, #180  ;;y
   03AD CD 00 00      [17]  722  call cpct_getScreenPtr_asm
                            723  
   03B0 EB            [ 4]  724  ex de, hl
   03B1 0E 04         [ 7]  725  ld c, #4  ;;ancho
   03B3 06 10         [ 7]  726  ld b, #16  ;;alto
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 24.
Hexadecimal [16-Bits]



   03B5 21 00 00      [10]  727  ld hl,#_spr4
   03B8 CD 00 00      [17]  728  call cpct_drawSprite_asm
                            729 
   03BB 11 00 80      [10]  730  ld  de, #0x8000
   03BE 0E 47         [ 7]  731  ld   c, #71    ;;x
   03C0 06 B4         [ 7]  732  ld   b, #180  ;;y
   03C2 CD 00 00      [17]  733  call cpct_getScreenPtr_asm
                            734  
   03C5 EB            [ 4]  735  ex de, hl
   03C6 0E 04         [ 7]  736  ld c, #4 ;;ancho
   03C8 06 10         [ 7]  737  ld b, #16  ;;alto
   03CA 21 00 00      [10]  738  ld hl,#_spr4
   03CD CD 00 00      [17]  739  call cpct_drawSprite_asm
                            740 
                            741 
                            742 
                            743 
                            744 
                            745 
   03D0 C9            [10]  746 ret
                            747 
