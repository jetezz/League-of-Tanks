ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 1.
Hexadecimal [16-Bits]



                              1 ;;
                              2 ;;sys_map_creator
                              3 ;;
                              4 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 2.
Hexadecimal [16-Bits]



                              5 .include "mapas/mapa1.h.s"
                              1 ;;
                              2 ;; File src/mapas/source/mapa1.tmx converted to csv using cpct_tmx2data [Sun Oct 27 21:10:54 2019]
                              3 ;;   * Visible Layers:  1
                              4 ;;   * Layer Width:     20
                              5 ;;   * Layer Height:    25
                              6 ;;   * Bits per tile:   8
                              7 ;;   * Layer Bytes:     500 (20 x 25 items, 8 bits per item)
                              8 ;;   * Total Bytes:     500 (500 x 1, bytes per layer times layers)
                              9 ;;
                             10 ;;#### Width and height constants ####
                     0014    11 _mapa1_W == 20
                     0019    12 _mapa1_H == 25
                             13 
                             14 ;;#### Converted layer tilemaps ####
                             15 ;;   Visible layers: 1
                             16 ;;
                     01F4    17 _mapa1_SIZE == 500
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 3.
Hexadecimal [16-Bits]



                              6 .include "cpct_functions.h.s"
                              1 ;;
                              2 ;;CPCTELERA FUNCTION
                              3 ;;
                              4 
                              5 
                              6 .globl cpct_getScreenPtr_asm
                              7 .globl cpct_drawSolidBox_asm
                              8 .globl cpct_setDrawCharM0_asm 
                              9 .globl cpct_drawStringM0_asm
                             10 .globl cpct_disableFirmware_asm
                             11 .globl cpct_scanKeyboard_asm
                             12 .globl cpct_isKeyPressed_asm
                             13 .globl cpct_setVideoMode_asm
                             14 .globl cpct_drawSprite_asm
                             15 .globl cpct_setPalette_asm
                             16 .globl cpct_setVideoMemoryPage_asm
                             17 .globl cpct_waitVSYNC_asm
                             18 .globl cpct_zx7b_decrunch_s_asm
                             19 .globl cpct_etm_setDrawTilemap4x8_ag_asm
                             20 .globl cpct_etm_drawTilemap4x8_ag_asm	
                             21 .globl cpct_waitHalts_asm
                             22 
                             23 .globl cpct_akp_musicPlay_asm
                             24 .globl cpct_akp_musicInit_asm
                             25 .globl cpct_setInterruptHandler_asm
                             26 .globl cpct_getRandom_mxor_u8_asm
                             27 
                             28 
                             29 
                             30 
                             31 
                             32 
                             33 
                             34 .globl cpct_akp_SFXPlay_asm
                             35 .globl cpct_akp_SFXInit_asm
                             36 .globl cpct_akp_SFXStopAll_asm
                             37 .globl cpct_akp_stop_asm
                             38 
                             39 
                             40 
                             41 
                             42 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 4.
Hexadecimal [16-Bits]



                              7 .include "assets.h.s"
                              1 ;;
                              2 ;;Assets globals
                              3 ;;
                              4 
                              5 .globl _cannons_sp_00
                              6 .globl _cannons_sp_01
                              7 .globl _cannons_sp_02
                              8 .globl _cannons_sp_03
                              9 .globl _cannons_sp_04
                             10 .globl _cannons_sp_05
                             11 .globl _cannons_sp_06
                             12 .globl _cannons_sp_07
                             13 .globl _cannons_sp_08
                             14 .globl _cannons_sp_09
                             15 .globl _cannons_sp_10
                             16 .globl _cannons_sp_11
                             17 .globl _cannons_sp_12
                             18 .globl _cannons_sp_13
                             19 .globl _cannons_sp_14
                             20 .globl _cannons_sp_15
                             21 .globl _cannons_sp_16
                             22 .globl _cannons_sp_17
                             23 .globl _cannons_sp_18
                             24 .globl _cannons_sp_19
                             25 .globl _player_sp
                             26 .globl _spr2
                             27 .globl _spr3
                             28 .globl _spr4
                             29 .globl _mapa1
                             30 .globl _mapa2
                             31 .globl _mapa3
                             32 .globl _mapa4
                             33 .globl _mapa5
                             34 .globl _mapa6
                             35 .globl _single_mapa1
                             36 .globl _single_mapa2
                             37 .globl _single_mapa3
                             38 .globl _single_mapa4
                             39 .globl _single_mapa5
                             40 .globl _single_mapa6
                             41 .globl _plant_sp
                             42 
                             43 .globl _tileset_00
                             44 .globl _bala_sp
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 5.
Hexadecimal [16-Bits]



                              8 .include "man/state_manager.h.s"
                              1 ;;
                              2 ;;Draw map h
                              3 ;;
                              4 
                              5 
                              6 
                              7 .globl manage_game
                              8 .globl jugandostate_init
                              9 .globl set_Ingame
                             10 .globl set_Gameover
                             11 .globl set_Inicio
                             12 .globl _pausa
                             13 .globl _gamemode
                             14 
                             15 .globl get_gamemode
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 6.
Hexadecimal [16-Bits]



                              9 .include "man/st_game_over.h.s"
                              1 ;;
                              2 ;;Draw map h
                              3 ;;
                              4 
                              5 .globl updategameover_init
                              6 .globl updategameover
                              7 .globl set_winner_pos
                              8 .globl estado_game_over
                              9 .globl reiniciar_gameover
                             10 .globl single_end_init
                             11 .globl single_end_update
                             12 .globl kill_all
                             13 
                     0001    14 single_muere=1
                     0000    15 mueren_todos=0
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 7.
Hexadecimal [16-Bits]



                             10     
                             11 
   0000 00 00                12 _puntero_mapa: .dw #00
                             13 
                             14 
   0002                      15 draw_map::
                             16 
                             17 
                             18 ;;Pintamos el mapa de manera inicial
                             19 
                             20    
                             21     
                             22     ;;Establecemos el tileset
                             23    
                             24 
   0002 0E 14         [ 7]   25     ld    c,  #_mapa1_W
   0004 06 19         [ 7]   26     ld    b,  #_mapa1_H
   0006 11 14 00      [10]   27     ld    de, #_mapa1_W
   0009 21 00 00      [10]   28     ld    hl, #_tileset_00
   000C CD 00 00      [17]   29     call cpct_etm_setDrawTilemap4x8_ag_asm
                             30  
                             31  
                             32 
                             33 
                             34     ;;Pintamos el mapa inicialmente
                             35   
   000F 21 00 C0      [10]   36      ld    hl, #0xC000
   0012 ED 5B 00 00   [20]   37      ld    de, (_puntero_mapa)
   0016 CD 00 00      [17]   38      call cpct_etm_drawTilemap4x8_ag_asm
                             39 
   0019 21 00 80      [10]   40      ld    hl, #0x8000
   001C ED 5B 00 00   [20]   41      ld    de, (_puntero_mapa)
   0020 CD 00 00      [17]   42      call cpct_etm_drawTilemap4x8_ag_asm
                             43 
                             44 
                             45    
                             46 
   0023 C9            [10]   47 ret
                             48 
                             49 
                             50 
                             51 
   0024                      52 draw_map_sinhud::
                             53 
                             54 
                             55 ;;Pintamos el mapa de manera inicial
                             56 
                             57    
                             58     
                             59     ;;Establecemos el tileset
                             60 
                             61     ;;Aqui se piinta con 3 tiles menos, los del hud
   0024 0E 14         [ 7]   62     ld    c,  #_mapa1_W
   0026 06 19         [ 7]   63     ld    b,  #_mapa1_H
   0028 05            [ 4]   64     dec b
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 8.
Hexadecimal [16-Bits]



   0029 05            [ 4]   65     dec b
   002A 05            [ 4]   66     dec b
   002B 11 14 00      [10]   67     ld    de, #_mapa1_W
   002E 21 00 00      [10]   68     ld    hl, #_tileset_00
   0031 CD 00 00      [17]   69     call cpct_etm_setDrawTilemap4x8_ag_asm
                             70  
                             71  
                             72 
                             73 
                             74     ;;Pintamos el mapa inicialmente
                             75   
   0034 21 00 C0      [10]   76      ld    hl, #0xC000
   0037 ED 5B 00 00   [20]   77      ld    de, (_puntero_mapa)
   003B CD 00 00      [17]   78      call cpct_etm_drawTilemap4x8_ag_asm
                             79 
   003E 21 00 80      [10]   80      ld    hl, #0x8000
   0041 ED 5B 00 00   [20]   81      ld    de, (_puntero_mapa)
   0045 CD 00 00      [17]   82      call cpct_etm_drawTilemap4x8_ag_asm
                             83 
                             84 
                             85    
                             86 
   0048 C9            [10]   87 ret
                             88 
                             89 
   0049 00                   90 nivelActual: .db #00
                             91 
   004A                      92 reset_lvl::
                             93 
   004A 3E 00         [ 7]   94   ld a, #00
   004C 32 49 00      [13]   95   ld (nivelActual), a
                             96 
   004F C9            [10]   97 ret
   0050                      98 next_map::
                             99 
                            100 
                            101 
   0050 CD 00 00      [17]  102 call estado_game_over
   0053 3D            [ 4]  103 dec a
   0054 28 AC         [12]  104 jr z, draw_map
                            105 
                            106 
                            107     ;;Sumar un nivel
   0056 3A 49 00      [13]  108     ld a, (nivelActual)
   0059 3C            [ 4]  109     inc a
   005A 32 49 00      [13]  110     ld (nivelActual), a
                            111 
                            112 
   005D 3A 00 00      [13]  113     ld a, (_gamemode) 
   0060 FE 05         [ 7]  114     cp #5
   0062 CC C6 00      [17]  115     call z, next_map_singlep
   0065 3A 00 00      [13]  116     ld a, (_gamemode) 
   0068 FE 05         [ 7]  117     cp #5
   006A CC 02 00      [17]  118     call z, draw_map
   006D 3A 00 00      [13]  119     ld a, (_gamemode) 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 9.
Hexadecimal [16-Bits]



   0070 FE 05         [ 7]  120     cp #5
   0072 C8            [11]  121     ret z
                            122 
                            123 
   0073 CD 7A 00      [17]  124     call next_map_multi
   0076 CD 02 00      [17]  125     call draw_map
                            126 
                            127 
   0079 C9            [10]  128 ret
                            129 
                            130 
   007A                     131 next_map_multi:
                            132 
   007A 3A 49 00      [13]  133     ld a, (nivelActual)
   007D 3D            [ 4]  134     dec a
   007E CC 9C 00      [17]  135     call z, set_map1
   0081 C8            [11]  136         ret z
   0082 3D            [ 4]  137     dec a
   0083 CC A3 00      [17]  138     call z, set_map2
   0086 C8            [11]  139         ret z
   0087 3D            [ 4]  140     dec a
   0088 CC AA 00      [17]  141     call z, set_map3
   008B C8            [11]  142         ret z
   008C 3D            [ 4]  143     dec a
   008D CC B1 00      [17]  144     call z, set_map4
   0090 C8            [11]  145         ret z
   0091 3D            [ 4]  146     dec a
   0092 CC B8 00      [17]  147     call z, set_map5
   0095 C8            [11]  148         ret z
   0096 3D            [ 4]  149     dec a
   0097 CC BF 00      [17]  150     call z, set_map6
   009A C8            [11]  151         ret z
                            152 
   009B C9            [10]  153 ret
                            154 
   009C                     155 set_map1:
   009C 21 00 00      [10]  156     ld hl, #_mapa1
   009F 22 00 00      [16]  157     ld (_puntero_mapa), hl
   00A2 C9            [10]  158 ret
   00A3                     159 set_map2:
   00A3 21 00 00      [10]  160     ld hl, #_mapa2
   00A6 22 00 00      [16]  161     ld (_puntero_mapa), hl
   00A9 C9            [10]  162 ret
   00AA                     163 set_map3:
   00AA 21 00 00      [10]  164     ld hl, #_mapa3
   00AD 22 00 00      [16]  165     ld (_puntero_mapa), hl
   00B0 C9            [10]  166 ret
   00B1                     167 set_map4:
   00B1 21 00 00      [10]  168     ld hl, #_mapa4
   00B4 22 00 00      [16]  169     ld (_puntero_mapa), hl
   00B7 C9            [10]  170 ret
   00B8                     171 set_map5:
   00B8 21 00 00      [10]  172     ld hl, #_mapa5
   00BB 22 00 00      [16]  173     ld (_puntero_mapa), hl
   00BE C9            [10]  174 ret
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 10.
Hexadecimal [16-Bits]



   00BF                     175 set_map6:
   00BF 21 00 00      [10]  176     ld hl, #_mapa6
   00C2 22 00 00      [16]  177     ld (_puntero_mapa), hl
   00C5 C9            [10]  178 ret
   00C6                     179 next_map_singlep:
                            180     
   00C6 3A 49 00      [13]  181     ld a, (nivelActual)
   00C9 3D            [ 4]  182     dec a
   00CA CC E8 00      [17]  183     call z, set_single_map1
   00CD C8            [11]  184         ret z
   00CE 3D            [ 4]  185     dec a
   00CF CC EF 00      [17]  186     call z, set_single_map2
   00D2 C8            [11]  187         ret z
   00D3 3D            [ 4]  188     dec a
   00D4 CC F6 00      [17]  189     call z, set_single_map3
   00D7 C8            [11]  190         ret z
   00D8 3D            [ 4]  191     dec a
   00D9 CC FD 00      [17]  192     call z, set_single_map4
   00DC C8            [11]  193         ret z
   00DD 3D            [ 4]  194     dec a
   00DE CC 04 01      [17]  195     call z, set_single_map5
   00E1 C8            [11]  196         ret z
   00E2 3D            [ 4]  197     dec a
   00E3 CC 0B 01      [17]  198     call z, set_single_map6
   00E6 C8            [11]  199         ret z
                            200 
   00E7 C9            [10]  201 ret
   00E8                     202 set_single_map1:
   00E8 21 00 00      [10]  203     ld hl, #_single_mapa1
   00EB 22 00 00      [16]  204     ld (_puntero_mapa), hl
   00EE C9            [10]  205 ret
   00EF                     206 set_single_map2:
   00EF 21 00 00      [10]  207     ld hl, #_single_mapa2
   00F2 22 00 00      [16]  208     ld (_puntero_mapa), hl
   00F5 C9            [10]  209 ret
   00F6                     210 set_single_map3:
   00F6 21 00 00      [10]  211     ld hl, #_single_mapa3
   00F9 22 00 00      [16]  212     ld (_puntero_mapa), hl
   00FC C9            [10]  213 ret
   00FD                     214 set_single_map4:
   00FD 21 00 00      [10]  215     ld hl, #_single_mapa4
   0100 22 00 00      [16]  216     ld (_puntero_mapa), hl
   0103 C9            [10]  217 ret
   0104                     218 set_single_map5:
   0104 21 00 00      [10]  219     ld hl, #_single_mapa5
   0107 22 00 00      [16]  220     ld (_puntero_mapa), hl
   010A C9            [10]  221 ret
   010B                     222 set_single_map6:
   010B 21 00 00      [10]  223     ld hl, #_single_mapa6
   010E 22 00 00      [16]  224     ld (_puntero_mapa), hl
   0111 C9            [10]  225 ret
                            226 
                            227 
                            228 
